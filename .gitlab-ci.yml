stages:
  - dep
  - test
  - build
  - deploy

dep:
  stage: dep
  image: golang:latest
  script: go mod vendor
  artifacts:
    name: "vendor-$CI_PIPELINE_ID"
    paths:
      - vendor/
    expire_in: 1 hour

go-test:
  image: golang:latest
  stage: test
  dependencies:
    - dep
  script:
    - go test

gradio:
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  dependencies:
    - dep
  only:
    - main

gnuradio:
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE/gnuradio:latest --tag $CI_REGISTRY_IMAGE/gnuradio:$CI_COMMIT_SHORT_SHA ./docker
    - docker push $CI_REGISTRY_IMAGE/gnuradio:latest
    - docker push $CI_REGISTRY_IMAGE/gnuradio:$CI_COMMIT_SHORT_SHA
  dependencies:
    - dep
  only:
    - main

deploy:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE || true
    - docker pull $CI_REGISTRY_IMAGE/gnuradio || true
    - docker rm -f gradio || true
    - docker rm -f gnuradio || true
    - docker run -dt --name gradio -p 3031:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /srv/gradio:/etc/gradio --restart always $CI_REGISTRY_IMAGE
  only:
    - main
  tags:
    - core
